name: Build and Release APK

on:
  push:
    branches: [ main, release ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.2'
        channel: 'stable'
        cache: true
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Run tests
      run: flutter test
      
    - name: Build APK (Debug)
      if: github.event_name == 'pull_request'
      run: flutter build apk --debug
      
    - name: Build APK (Release)
      if: github.event_name == 'push'
      run: flutter build apk --release
      
    - name: Get version from pubspec.yaml
      id: version
      run: |
        VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
        BUILD_NUMBER=$(grep '^version:' pubspec.yaml | cut -d '+' -f 2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        echo "full_version=$VERSION+$BUILD_NUMBER" >> $GITHUB_OUTPUT
        
    - name: Rename APK
      if: github.event_name == 'push'
      run: |
        mv build/app/outputs/flutter-apk/app-release.apk \
           build/app/outputs/flutter-apk/notes-app-v${{ steps.version.outputs.version }}.apk
           
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: notes-app-apk
        path: build/app/outputs/flutter-apk/*.apk
        retention-days: 30
        
    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Notes App v${{ steps.version.outputs.version }}
        body: |
          ## Notes App v${{ steps.version.outputs.version }}
          
          ### What's New
          - Auto-generated release from commit ${{ github.sha }}
          - Build number: ${{ steps.version.outputs.build_number }}
          
          ### Download
          Download the APK file below and install it on your Android device.
          
          ### Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" in your Android settings
          3. Install the APK file
          
          ### Features
          - Create, edit, and delete notes
          - Search functionality
          - Categories and tags
          - Dark/Light mode
          - Local storage with SQLite
          - Export/Import notes
          
        files: |
          build/app/outputs/flutter-apk/notes-app-v${{ steps.version.outputs.version }}.apk
        draft: false
        prerelease: false
        generate_release_notes: true
        
    - name: Send notification
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ Build completed successfully!"
          echo "üì± APK generated: notes-app-v${{ steps.version.outputs.version }}.apk"
          echo "üöÄ Release created: v${{ steps.version.outputs.version }}"
        else
          echo "‚ùå Build failed!"
        fi

  auto-increment-version:
    name: Auto Increment Version
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Increment build number
      run: |
        # Get current version and build number
        CURRENT_VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2)
        VERSION_NAME=$(echo $CURRENT_VERSION | cut -d '+' -f 1)
        BUILD_NUMBER=$(echo $CURRENT_VERSION | cut -d '+' -f 2)
        
        # Increment build number
        NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
        NEW_VERSION="$VERSION_NAME+$NEW_BUILD_NUMBER"
        
        # Update pubspec.yaml
        sed -i "s/^version: .*/version: $NEW_VERSION/" pubspec.yaml
        
        echo "Updated version from $CURRENT_VERSION to $NEW_VERSION"
        
    - name: Commit version bump
      run: |
        git add pubspec.yaml
        git commit -m "chore: bump build number [skip ci]" || exit 0
        git push

